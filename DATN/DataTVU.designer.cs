#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DATN
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DoAnTotNghiep_Temp_2")]
	public partial class DataTVUDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertSINHVIEN(SINHVIEN instance);
    partial void UpdateSINHVIEN(SINHVIEN instance);
    partial void DeleteSINHVIEN(SINHVIEN instance);
    partial void InsertCTDT(CTDT instance);
    partial void UpdateCTDT(CTDT instance);
    partial void DeleteCTDT(CTDT instance);
    partial void InsertDIEM(DIEM instance);
    partial void UpdateDIEM(DIEM instance);
    partial void DeleteDIEM(DIEM instance);
    partial void InsertHOCKI(HOCKI instance);
    partial void UpdateHOCKI(HOCKI instance);
    partial void DeleteHOCKI(HOCKI instance);
    partial void InsertLich(Lich instance);
    partial void UpdateLich(Lich instance);
    partial void DeleteLich(Lich instance);
    partial void InsertLOP(LOP instance);
    partial void UpdateLOP(LOP instance);
    partial void DeleteLOP(LOP instance);
    partial void InsertMON(MON instance);
    partial void UpdateMON(MON instance);
    partial void DeleteMON(MON instance);
    #endregion
		
		public DataTVUDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DoAnTotNghiep_Temp_2ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataTVUDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataTVUDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataTVUDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataTVUDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<SINHVIEN> SINHVIENs
		{
			get
			{
				return this.GetTable<SINHVIEN>();
			}
		}
		
		public System.Data.Linq.Table<CTDT> CTDTs
		{
			get
			{
				return this.GetTable<CTDT>();
			}
		}
		
		public System.Data.Linq.Table<DIEM> DIEMs
		{
			get
			{
				return this.GetTable<DIEM>();
			}
		}
		
		public System.Data.Linq.Table<HOCKI> HOCKIs
		{
			get
			{
				return this.GetTable<HOCKI>();
			}
		}
		
		public System.Data.Linq.Table<Lich> Liches
		{
			get
			{
				return this.GetTable<Lich>();
			}
		}
		
		public System.Data.Linq.Table<LOP> LOPs
		{
			get
			{
				return this.GetTable<LOP>();
			}
		}
		
		public System.Data.Linq.Table<MON> MONs
		{
			get
			{
				return this.GetTable<MON>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private string _Email;
		
		private string _Pass;
		
		private string _Name;
		
		private System.Nullable<int> _Roles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPassChanging(string value);
    partial void OnPassChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRolesChanging(System.Nullable<int> value);
    partial void OnRolesChanged();
    #endregion
		
		public Account()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass", DbType="VarChar(255)")]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Roles", DbType="Int")]
		public System.Nullable<int> Roles
		{
			get
			{
				return this._Roles;
			}
			set
			{
				if ((this._Roles != value))
				{
					this.OnRolesChanging(value);
					this.SendPropertyChanging();
					this._Roles = value;
					this.SendPropertyChanged("Roles");
					this.OnRolesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SINHVIEN")]
	public partial class SINHVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Ma_SV;
		
		private string _Ten_SV;
		
		private string _Dia_Chi;
		
		private string _SDT;
		
		private string _Ma_Lop;
		
		private EntitySet<DIEM> _DIEMs;
		
		private EntityRef<LOP> _LOP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMa_SVChanging(string value);
    partial void OnMa_SVChanged();
    partial void OnTen_SVChanging(string value);
    partial void OnTen_SVChanged();
    partial void OnDia_ChiChanging(string value);
    partial void OnDia_ChiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnMa_LopChanging(string value);
    partial void OnMa_LopChanged();
    #endregion
		
		public SINHVIEN()
		{
			this._DIEMs = new EntitySet<DIEM>(new Action<DIEM>(this.attach_DIEMs), new Action<DIEM>(this.detach_DIEMs));
			this._LOP = default(EntityRef<LOP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_SV", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Ma_SV
		{
			get
			{
				return this._Ma_SV;
			}
			set
			{
				if ((this._Ma_SV != value))
				{
					this.OnMa_SVChanging(value);
					this.SendPropertyChanging();
					this._Ma_SV = value;
					this.SendPropertyChanged("Ma_SV");
					this.OnMa_SVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_SV", DbType="NVarChar(255)")]
		public string Ten_SV
		{
			get
			{
				return this._Ten_SV;
			}
			set
			{
				if ((this._Ten_SV != value))
				{
					this.OnTen_SVChanging(value);
					this.SendPropertyChanging();
					this._Ten_SV = value;
					this.SendPropertyChanged("Ten_SV");
					this.OnTen_SVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dia_Chi", DbType="NVarChar(255)")]
		public string Dia_Chi
		{
			get
			{
				return this._Dia_Chi;
			}
			set
			{
				if ((this._Dia_Chi != value))
				{
					this.OnDia_ChiChanging(value);
					this.SendPropertyChanging();
					this._Dia_Chi = value;
					this.SendPropertyChanged("Dia_Chi");
					this.OnDia_ChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(12)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_Lop", DbType="VarChar(100)")]
		public string Ma_Lop
		{
			get
			{
				return this._Ma_Lop;
			}
			set
			{
				if ((this._Ma_Lop != value))
				{
					if (this._LOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMa_LopChanging(value);
					this.SendPropertyChanging();
					this._Ma_Lop = value;
					this.SendPropertyChanged("Ma_Lop");
					this.OnMa_LopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SINHVIEN_DIEM", Storage="_DIEMs", ThisKey="Ma_SV", OtherKey="Ma_SV")]
		public EntitySet<DIEM> DIEMs
		{
			get
			{
				return this._DIEMs;
			}
			set
			{
				this._DIEMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_SINHVIEN", Storage="_LOP", ThisKey="Ma_Lop", OtherKey="Ma_Lop", IsForeignKey=true)]
		public LOP LOP
		{
			get
			{
				return this._LOP.Entity;
			}
			set
			{
				LOP previousValue = this._LOP.Entity;
				if (((previousValue != value) 
							|| (this._LOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP.Entity = null;
						previousValue.SINHVIENs.Remove(this);
					}
					this._LOP.Entity = value;
					if ((value != null))
					{
						value.SINHVIENs.Add(this);
						this._Ma_Lop = value.Ma_Lop;
					}
					else
					{
						this._Ma_Lop = default(string);
					}
					this.SendPropertyChanged("LOP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.SINHVIEN = this;
		}
		
		private void detach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.SINHVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTDT")]
	public partial class CTDT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Ma_CTDT;
		
		private string _Ten_CTDT;
		
		private EntitySet<LOP> _LOPs;
		
		private EntitySet<MON> _MONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMa_CTDTChanging(string value);
    partial void OnMa_CTDTChanged();
    partial void OnTen_CTDTChanging(string value);
    partial void OnTen_CTDTChanged();
    #endregion
		
		public CTDT()
		{
			this._LOPs = new EntitySet<LOP>(new Action<LOP>(this.attach_LOPs), new Action<LOP>(this.detach_LOPs));
			this._MONs = new EntitySet<MON>(new Action<MON>(this.attach_MONs), new Action<MON>(this.detach_MONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_CTDT", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Ma_CTDT
		{
			get
			{
				return this._Ma_CTDT;
			}
			set
			{
				if ((this._Ma_CTDT != value))
				{
					this.OnMa_CTDTChanging(value);
					this.SendPropertyChanging();
					this._Ma_CTDT = value;
					this.SendPropertyChanged("Ma_CTDT");
					this.OnMa_CTDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_CTDT", DbType="NVarChar(255)")]
		public string Ten_CTDT
		{
			get
			{
				return this._Ten_CTDT;
			}
			set
			{
				if ((this._Ten_CTDT != value))
				{
					this.OnTen_CTDTChanging(value);
					this.SendPropertyChanging();
					this._Ten_CTDT = value;
					this.SendPropertyChanged("Ten_CTDT");
					this.OnTen_CTDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CTDT_LOP", Storage="_LOPs", ThisKey="Ma_CTDT", OtherKey="Ma_CTDT")]
		public EntitySet<LOP> LOPs
		{
			get
			{
				return this._LOPs;
			}
			set
			{
				this._LOPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CTDT_MON", Storage="_MONs", ThisKey="Ma_CTDT", OtherKey="Ma_CTDT")]
		public EntitySet<MON> MONs
		{
			get
			{
				return this._MONs;
			}
			set
			{
				this._MONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.CTDT = this;
		}
		
		private void detach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.CTDT = null;
		}
		
		private void attach_MONs(MON entity)
		{
			this.SendPropertyChanging();
			entity.CTDT = this;
		}
		
		private void detach_MONs(MON entity)
		{
			this.SendPropertyChanging();
			entity.CTDT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DIEM")]
	public partial class DIEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Diem;
		
		private System.Nullable<int> _PT_KT;
		
		private System.Nullable<int> _PT_Thi;
		
		private System.Nullable<double> _Thi_L1;
		
		private System.Nullable<double> _Thi_L2;
		
		private System.Nullable<double> _Thi_L3;
		
		private System.Nullable<double> _TK10;
		
		private string _TKCH;
		
		private string _KQ1;
		
		private string _KQ;
		
		private string _Ghi_Chu;
		
		private System.Nullable<int> _ID_Mon;
		
		private string _Ma_SV;
		
		private EntityRef<SINHVIEN> _SINHVIEN;
		
		private EntityRef<MON> _MON;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DiemChanging(int value);
    partial void OnID_DiemChanged();
    partial void OnPT_KTChanging(System.Nullable<int> value);
    partial void OnPT_KTChanged();
    partial void OnPT_ThiChanging(System.Nullable<int> value);
    partial void OnPT_ThiChanged();
    partial void OnThi_L1Changing(System.Nullable<double> value);
    partial void OnThi_L1Changed();
    partial void OnThi_L2Changing(System.Nullable<double> value);
    partial void OnThi_L2Changed();
    partial void OnThi_L3Changing(System.Nullable<double> value);
    partial void OnThi_L3Changed();
    partial void OnTK10Changing(System.Nullable<double> value);
    partial void OnTK10Changed();
    partial void OnTKCHChanging(string value);
    partial void OnTKCHChanged();
    partial void OnKQ1Changing(string value);
    partial void OnKQ1Changed();
    partial void OnKQChanging(string value);
    partial void OnKQChanged();
    partial void OnGhi_ChuChanging(string value);
    partial void OnGhi_ChuChanged();
    partial void OnID_MonChanging(System.Nullable<int> value);
    partial void OnID_MonChanged();
    partial void OnMa_SVChanging(string value);
    partial void OnMa_SVChanged();
    #endregion
		
		public DIEM()
		{
			this._SINHVIEN = default(EntityRef<SINHVIEN>);
			this._MON = default(EntityRef<MON>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Diem", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Diem
		{
			get
			{
				return this._ID_Diem;
			}
			set
			{
				if ((this._ID_Diem != value))
				{
					this.OnID_DiemChanging(value);
					this.SendPropertyChanging();
					this._ID_Diem = value;
					this.SendPropertyChanged("ID_Diem");
					this.OnID_DiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PT_KT", DbType="Int")]
		public System.Nullable<int> PT_KT
		{
			get
			{
				return this._PT_KT;
			}
			set
			{
				if ((this._PT_KT != value))
				{
					this.OnPT_KTChanging(value);
					this.SendPropertyChanging();
					this._PT_KT = value;
					this.SendPropertyChanged("PT_KT");
					this.OnPT_KTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PT_Thi", DbType="Int")]
		public System.Nullable<int> PT_Thi
		{
			get
			{
				return this._PT_Thi;
			}
			set
			{
				if ((this._PT_Thi != value))
				{
					this.OnPT_ThiChanging(value);
					this.SendPropertyChanging();
					this._PT_Thi = value;
					this.SendPropertyChanged("PT_Thi");
					this.OnPT_ThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thi_L1", DbType="Float")]
		public System.Nullable<double> Thi_L1
		{
			get
			{
				return this._Thi_L1;
			}
			set
			{
				if ((this._Thi_L1 != value))
				{
					this.OnThi_L1Changing(value);
					this.SendPropertyChanging();
					this._Thi_L1 = value;
					this.SendPropertyChanged("Thi_L1");
					this.OnThi_L1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thi_L2", DbType="Float")]
		public System.Nullable<double> Thi_L2
		{
			get
			{
				return this._Thi_L2;
			}
			set
			{
				if ((this._Thi_L2 != value))
				{
					this.OnThi_L2Changing(value);
					this.SendPropertyChanging();
					this._Thi_L2 = value;
					this.SendPropertyChanged("Thi_L2");
					this.OnThi_L2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thi_L3", DbType="Float")]
		public System.Nullable<double> Thi_L3
		{
			get
			{
				return this._Thi_L3;
			}
			set
			{
				if ((this._Thi_L3 != value))
				{
					this.OnThi_L3Changing(value);
					this.SendPropertyChanging();
					this._Thi_L3 = value;
					this.SendPropertyChanged("Thi_L3");
					this.OnThi_L3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TK10", DbType="Float")]
		public System.Nullable<double> TK10
		{
			get
			{
				return this._TK10;
			}
			set
			{
				if ((this._TK10 != value))
				{
					this.OnTK10Changing(value);
					this.SendPropertyChanging();
					this._TK10 = value;
					this.SendPropertyChanged("TK10");
					this.OnTK10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TKCH", DbType="VarChar(10)")]
		public string TKCH
		{
			get
			{
				return this._TKCH;
			}
			set
			{
				if ((this._TKCH != value))
				{
					this.OnTKCHChanging(value);
					this.SendPropertyChanging();
					this._TKCH = value;
					this.SendPropertyChanged("TKCH");
					this.OnTKCHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KQ1", DbType="NVarChar(100)")]
		public string KQ1
		{
			get
			{
				return this._KQ1;
			}
			set
			{
				if ((this._KQ1 != value))
				{
					this.OnKQ1Changing(value);
					this.SendPropertyChanging();
					this._KQ1 = value;
					this.SendPropertyChanged("KQ1");
					this.OnKQ1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KQ", DbType="NVarChar(100)")]
		public string KQ
		{
			get
			{
				return this._KQ;
			}
			set
			{
				if ((this._KQ != value))
				{
					this.OnKQChanging(value);
					this.SendPropertyChanging();
					this._KQ = value;
					this.SendPropertyChanged("KQ");
					this.OnKQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ghi_Chu", DbType="NVarChar(255)")]
		public string Ghi_Chu
		{
			get
			{
				return this._Ghi_Chu;
			}
			set
			{
				if ((this._Ghi_Chu != value))
				{
					this.OnGhi_ChuChanging(value);
					this.SendPropertyChanging();
					this._Ghi_Chu = value;
					this.SendPropertyChanged("Ghi_Chu");
					this.OnGhi_ChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Mon", DbType="Int")]
		public System.Nullable<int> ID_Mon
		{
			get
			{
				return this._ID_Mon;
			}
			set
			{
				if ((this._ID_Mon != value))
				{
					if (this._MON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_MonChanging(value);
					this.SendPropertyChanging();
					this._ID_Mon = value;
					this.SendPropertyChanged("ID_Mon");
					this.OnID_MonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_SV", DbType="VarChar(100)")]
		public string Ma_SV
		{
			get
			{
				return this._Ma_SV;
			}
			set
			{
				if ((this._Ma_SV != value))
				{
					if (this._SINHVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMa_SVChanging(value);
					this.SendPropertyChanging();
					this._Ma_SV = value;
					this.SendPropertyChanged("Ma_SV");
					this.OnMa_SVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SINHVIEN_DIEM", Storage="_SINHVIEN", ThisKey="Ma_SV", OtherKey="Ma_SV", IsForeignKey=true)]
		public SINHVIEN SINHVIEN
		{
			get
			{
				return this._SINHVIEN.Entity;
			}
			set
			{
				SINHVIEN previousValue = this._SINHVIEN.Entity;
				if (((previousValue != value) 
							|| (this._SINHVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SINHVIEN.Entity = null;
						previousValue.DIEMs.Remove(this);
					}
					this._SINHVIEN.Entity = value;
					if ((value != null))
					{
						value.DIEMs.Add(this);
						this._Ma_SV = value.Ma_SV;
					}
					else
					{
						this._Ma_SV = default(string);
					}
					this.SendPropertyChanged("SINHVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MON_DIEM", Storage="_MON", ThisKey="ID_Mon", OtherKey="ID_Mon", IsForeignKey=true)]
		public MON MON
		{
			get
			{
				return this._MON.Entity;
			}
			set
			{
				MON previousValue = this._MON.Entity;
				if (((previousValue != value) 
							|| (this._MON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MON.Entity = null;
						previousValue.DIEMs.Remove(this);
					}
					this._MON.Entity = value;
					if ((value != null))
					{
						value.DIEMs.Add(this);
						this._ID_Mon = value.ID_Mon;
					}
					else
					{
						this._ID_Mon = default(Nullable<int>);
					}
					this.SendPropertyChanged("MON");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOCKI")]
	public partial class HOCKI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Ma_HK;
		
		private string _Ten_HK;
		
		private EntitySet<MON> _MONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMa_HKChanging(string value);
    partial void OnMa_HKChanged();
    partial void OnTen_HKChanging(string value);
    partial void OnTen_HKChanged();
    #endregion
		
		public HOCKI()
		{
			this._MONs = new EntitySet<MON>(new Action<MON>(this.attach_MONs), new Action<MON>(this.detach_MONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_HK", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Ma_HK
		{
			get
			{
				return this._Ma_HK;
			}
			set
			{
				if ((this._Ma_HK != value))
				{
					this.OnMa_HKChanging(value);
					this.SendPropertyChanging();
					this._Ma_HK = value;
					this.SendPropertyChanged("Ma_HK");
					this.OnMa_HKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_HK", DbType="NVarChar(100)")]
		public string Ten_HK
		{
			get
			{
				return this._Ten_HK;
			}
			set
			{
				if ((this._Ten_HK != value))
				{
					this.OnTen_HKChanging(value);
					this.SendPropertyChanging();
					this._Ten_HK = value;
					this.SendPropertyChanged("Ten_HK");
					this.OnTen_HKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCKI_MON", Storage="_MONs", ThisKey="Ma_HK", OtherKey="Ma_HK")]
		public EntitySet<MON> MONs
		{
			get
			{
				return this._MONs;
			}
			set
			{
				this._MONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MONs(MON entity)
		{
			this.SendPropertyChanging();
			entity.HOCKI = this;
		}
		
		private void detach_MONs(MON entity)
		{
			this.SendPropertyChanging();
			entity.HOCKI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lich")]
	public partial class Lich : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Lich;
		
		private string _Ma_MH;
		
		private string _Ten_MH;
		
		private string _Lop;
		
		private string _Thu;
		
		private string _Phong;
		
		private string _Thoi_Gian;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LichChanging(int value);
    partial void OnID_LichChanged();
    partial void OnMa_MHChanging(string value);
    partial void OnMa_MHChanged();
    partial void OnTen_MHChanging(string value);
    partial void OnTen_MHChanged();
    partial void OnLopChanging(string value);
    partial void OnLopChanged();
    partial void OnThuChanging(string value);
    partial void OnThuChanged();
    partial void OnPhongChanging(string value);
    partial void OnPhongChanged();
    partial void OnThoi_GianChanging(string value);
    partial void OnThoi_GianChanged();
    #endregion
		
		public Lich()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Lich", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Lich
		{
			get
			{
				return this._ID_Lich;
			}
			set
			{
				if ((this._ID_Lich != value))
				{
					this.OnID_LichChanging(value);
					this.SendPropertyChanging();
					this._ID_Lich = value;
					this.SendPropertyChanged("ID_Lich");
					this.OnID_LichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_MH", DbType="VarChar(100)")]
		public string Ma_MH
		{
			get
			{
				return this._Ma_MH;
			}
			set
			{
				if ((this._Ma_MH != value))
				{
					this.OnMa_MHChanging(value);
					this.SendPropertyChanging();
					this._Ma_MH = value;
					this.SendPropertyChanged("Ma_MH");
					this.OnMa_MHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_MH", DbType="NVarChar(255)")]
		public string Ten_MH
		{
			get
			{
				return this._Ten_MH;
			}
			set
			{
				if ((this._Ten_MH != value))
				{
					this.OnTen_MHChanging(value);
					this.SendPropertyChanging();
					this._Ten_MH = value;
					this.SendPropertyChanged("Ten_MH");
					this.OnTen_MHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lop", DbType="VarChar(255)")]
		public string Lop
		{
			get
			{
				return this._Lop;
			}
			set
			{
				if ((this._Lop != value))
				{
					this.OnLopChanging(value);
					this.SendPropertyChanging();
					this._Lop = value;
					this.SendPropertyChanged("Lop");
					this.OnLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thu", DbType="VarChar(100)")]
		public string Thu
		{
			get
			{
				return this._Thu;
			}
			set
			{
				if ((this._Thu != value))
				{
					this.OnThuChanging(value);
					this.SendPropertyChanging();
					this._Thu = value;
					this.SendPropertyChanged("Thu");
					this.OnThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phong", DbType="VarChar(100)")]
		public string Phong
		{
			get
			{
				return this._Phong;
			}
			set
			{
				if ((this._Phong != value))
				{
					this.OnPhongChanging(value);
					this.SendPropertyChanging();
					this._Phong = value;
					this.SendPropertyChanged("Phong");
					this.OnPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thoi_Gian", DbType="VarChar(255)")]
		public string Thoi_Gian
		{
			get
			{
				return this._Thoi_Gian;
			}
			set
			{
				if ((this._Thoi_Gian != value))
				{
					this.OnThoi_GianChanging(value);
					this.SendPropertyChanging();
					this._Thoi_Gian = value;
					this.SendPropertyChanged("Thoi_Gian");
					this.OnThoi_GianChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOP")]
	public partial class LOP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Ma_Lop;
		
		private string _Ten_Lop;
		
		private string _Bat;
		
		private string _Ma_CTDT;
		
		private EntitySet<SINHVIEN> _SINHVIENs;
		
		private EntityRef<CTDT> _CTDT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMa_LopChanging(string value);
    partial void OnMa_LopChanged();
    partial void OnTen_LopChanging(string value);
    partial void OnTen_LopChanged();
    partial void OnBatChanging(string value);
    partial void OnBatChanged();
    partial void OnMa_CTDTChanging(string value);
    partial void OnMa_CTDTChanged();
    #endregion
		
		public LOP()
		{
			this._SINHVIENs = new EntitySet<SINHVIEN>(new Action<SINHVIEN>(this.attach_SINHVIENs), new Action<SINHVIEN>(this.detach_SINHVIENs));
			this._CTDT = default(EntityRef<CTDT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_Lop", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Ma_Lop
		{
			get
			{
				return this._Ma_Lop;
			}
			set
			{
				if ((this._Ma_Lop != value))
				{
					this.OnMa_LopChanging(value);
					this.SendPropertyChanging();
					this._Ma_Lop = value;
					this.SendPropertyChanged("Ma_Lop");
					this.OnMa_LopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_Lop", DbType="NVarChar(255)")]
		public string Ten_Lop
		{
			get
			{
				return this._Ten_Lop;
			}
			set
			{
				if ((this._Ten_Lop != value))
				{
					this.OnTen_LopChanging(value);
					this.SendPropertyChanging();
					this._Ten_Lop = value;
					this.SendPropertyChanged("Ten_Lop");
					this.OnTen_LopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bat", DbType="NVarChar(100)")]
		public string Bat
		{
			get
			{
				return this._Bat;
			}
			set
			{
				if ((this._Bat != value))
				{
					this.OnBatChanging(value);
					this.SendPropertyChanging();
					this._Bat = value;
					this.SendPropertyChanged("Bat");
					this.OnBatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_CTDT", DbType="VarChar(255)")]
		public string Ma_CTDT
		{
			get
			{
				return this._Ma_CTDT;
			}
			set
			{
				if ((this._Ma_CTDT != value))
				{
					if (this._CTDT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMa_CTDTChanging(value);
					this.SendPropertyChanging();
					this._Ma_CTDT = value;
					this.SendPropertyChanged("Ma_CTDT");
					this.OnMa_CTDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_SINHVIEN", Storage="_SINHVIENs", ThisKey="Ma_Lop", OtherKey="Ma_Lop")]
		public EntitySet<SINHVIEN> SINHVIENs
		{
			get
			{
				return this._SINHVIENs;
			}
			set
			{
				this._SINHVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CTDT_LOP", Storage="_CTDT", ThisKey="Ma_CTDT", OtherKey="Ma_CTDT", IsForeignKey=true)]
		public CTDT CTDT
		{
			get
			{
				return this._CTDT.Entity;
			}
			set
			{
				CTDT previousValue = this._CTDT.Entity;
				if (((previousValue != value) 
							|| (this._CTDT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CTDT.Entity = null;
						previousValue.LOPs.Remove(this);
					}
					this._CTDT.Entity = value;
					if ((value != null))
					{
						value.LOPs.Add(this);
						this._Ma_CTDT = value.Ma_CTDT;
					}
					else
					{
						this._Ma_CTDT = default(string);
					}
					this.SendPropertyChanged("CTDT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SINHVIENs(SINHVIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOP = this;
		}
		
		private void detach_SINHVIENs(SINHVIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MON")]
	public partial class MON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Mon;
		
		private string _Ma_Mon;
		
		private string _Ten_Mon;
		
		private System.Nullable<int> _So_TC;
		
		private System.Nullable<int> _TC_LyThuyet;
		
		private System.Nullable<int> _TC_ThucHanh;
		
		private string _Ghi_Chu;
		
		private string _Ma_CTDT;
		
		private string _Ma_HK;
		
		private EntitySet<DIEM> _DIEMs;
		
		private EntityRef<CTDT> _CTDT;
		
		private EntityRef<HOCKI> _HOCKI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_MonChanging(int value);
    partial void OnID_MonChanged();
    partial void OnMa_MonChanging(string value);
    partial void OnMa_MonChanged();
    partial void OnTen_MonChanging(string value);
    partial void OnTen_MonChanged();
    partial void OnSo_TCChanging(System.Nullable<int> value);
    partial void OnSo_TCChanged();
    partial void OnTC_LyThuyetChanging(System.Nullable<int> value);
    partial void OnTC_LyThuyetChanged();
    partial void OnTC_ThucHanhChanging(System.Nullable<int> value);
    partial void OnTC_ThucHanhChanged();
    partial void OnGhi_ChuChanging(string value);
    partial void OnGhi_ChuChanged();
    partial void OnMa_CTDTChanging(string value);
    partial void OnMa_CTDTChanged();
    partial void OnMa_HKChanging(string value);
    partial void OnMa_HKChanged();
    #endregion
		
		public MON()
		{
			this._DIEMs = new EntitySet<DIEM>(new Action<DIEM>(this.attach_DIEMs), new Action<DIEM>(this.detach_DIEMs));
			this._CTDT = default(EntityRef<CTDT>);
			this._HOCKI = default(EntityRef<HOCKI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Mon", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Mon
		{
			get
			{
				return this._ID_Mon;
			}
			set
			{
				if ((this._ID_Mon != value))
				{
					this.OnID_MonChanging(value);
					this.SendPropertyChanging();
					this._ID_Mon = value;
					this.SendPropertyChanged("ID_Mon");
					this.OnID_MonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_Mon", DbType="VarChar(100)")]
		public string Ma_Mon
		{
			get
			{
				return this._Ma_Mon;
			}
			set
			{
				if ((this._Ma_Mon != value))
				{
					this.OnMa_MonChanging(value);
					this.SendPropertyChanging();
					this._Ma_Mon = value;
					this.SendPropertyChanged("Ma_Mon");
					this.OnMa_MonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_Mon", DbType="NVarChar(255)")]
		public string Ten_Mon
		{
			get
			{
				return this._Ten_Mon;
			}
			set
			{
				if ((this._Ten_Mon != value))
				{
					this.OnTen_MonChanging(value);
					this.SendPropertyChanging();
					this._Ten_Mon = value;
					this.SendPropertyChanged("Ten_Mon");
					this.OnTen_MonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_So_TC", DbType="Int")]
		public System.Nullable<int> So_TC
		{
			get
			{
				return this._So_TC;
			}
			set
			{
				if ((this._So_TC != value))
				{
					this.OnSo_TCChanging(value);
					this.SendPropertyChanging();
					this._So_TC = value;
					this.SendPropertyChanged("So_TC");
					this.OnSo_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TC_LyThuyet", DbType="Int")]
		public System.Nullable<int> TC_LyThuyet
		{
			get
			{
				return this._TC_LyThuyet;
			}
			set
			{
				if ((this._TC_LyThuyet != value))
				{
					this.OnTC_LyThuyetChanging(value);
					this.SendPropertyChanging();
					this._TC_LyThuyet = value;
					this.SendPropertyChanged("TC_LyThuyet");
					this.OnTC_LyThuyetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TC_ThucHanh", DbType="Int")]
		public System.Nullable<int> TC_ThucHanh
		{
			get
			{
				return this._TC_ThucHanh;
			}
			set
			{
				if ((this._TC_ThucHanh != value))
				{
					this.OnTC_ThucHanhChanging(value);
					this.SendPropertyChanging();
					this._TC_ThucHanh = value;
					this.SendPropertyChanged("TC_ThucHanh");
					this.OnTC_ThucHanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ghi_Chu", DbType="NVarChar(255)")]
		public string Ghi_Chu
		{
			get
			{
				return this._Ghi_Chu;
			}
			set
			{
				if ((this._Ghi_Chu != value))
				{
					this.OnGhi_ChuChanging(value);
					this.SendPropertyChanging();
					this._Ghi_Chu = value;
					this.SendPropertyChanged("Ghi_Chu");
					this.OnGhi_ChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_CTDT", DbType="VarChar(255)")]
		public string Ma_CTDT
		{
			get
			{
				return this._Ma_CTDT;
			}
			set
			{
				if ((this._Ma_CTDT != value))
				{
					if (this._CTDT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMa_CTDTChanging(value);
					this.SendPropertyChanging();
					this._Ma_CTDT = value;
					this.SendPropertyChanged("Ma_CTDT");
					this.OnMa_CTDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_HK", DbType="VarChar(10)")]
		public string Ma_HK
		{
			get
			{
				return this._Ma_HK;
			}
			set
			{
				if ((this._Ma_HK != value))
				{
					if (this._HOCKI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMa_HKChanging(value);
					this.SendPropertyChanging();
					this._Ma_HK = value;
					this.SendPropertyChanged("Ma_HK");
					this.OnMa_HKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MON_DIEM", Storage="_DIEMs", ThisKey="ID_Mon", OtherKey="ID_Mon")]
		public EntitySet<DIEM> DIEMs
		{
			get
			{
				return this._DIEMs;
			}
			set
			{
				this._DIEMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CTDT_MON", Storage="_CTDT", ThisKey="Ma_CTDT", OtherKey="Ma_CTDT", IsForeignKey=true)]
		public CTDT CTDT
		{
			get
			{
				return this._CTDT.Entity;
			}
			set
			{
				CTDT previousValue = this._CTDT.Entity;
				if (((previousValue != value) 
							|| (this._CTDT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CTDT.Entity = null;
						previousValue.MONs.Remove(this);
					}
					this._CTDT.Entity = value;
					if ((value != null))
					{
						value.MONs.Add(this);
						this._Ma_CTDT = value.Ma_CTDT;
					}
					else
					{
						this._Ma_CTDT = default(string);
					}
					this.SendPropertyChanged("CTDT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCKI_MON", Storage="_HOCKI", ThisKey="Ma_HK", OtherKey="Ma_HK", IsForeignKey=true)]
		public HOCKI HOCKI
		{
			get
			{
				return this._HOCKI.Entity;
			}
			set
			{
				HOCKI previousValue = this._HOCKI.Entity;
				if (((previousValue != value) 
							|| (this._HOCKI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCKI.Entity = null;
						previousValue.MONs.Remove(this);
					}
					this._HOCKI.Entity = value;
					if ((value != null))
					{
						value.MONs.Add(this);
						this._Ma_HK = value.Ma_HK;
					}
					else
					{
						this._Ma_HK = default(string);
					}
					this.SendPropertyChanged("HOCKI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.MON = this;
		}
		
		private void detach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.MON = null;
		}
	}
}
#pragma warning restore 1591
